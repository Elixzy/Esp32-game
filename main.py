from machine import Pin, PWM, SoftI2C
from time import sleep
from ssd1306 import SSD1306_I2C
from rotary_irq import RotaryIRQ
from music import play
from random import randint
import _thread as th
import framebuf

width = 10
height = 10
posx = randint(0,118)
posy=0
gameover=('C_5_ne','PAUSE_co','G_4_ne','PAUSE_co','E_4_ne','A_4_tn',
'B_4_tn','A_4_tn','G#_4_tn','A#_4_tn','A_4_tn','G_4_co','F_4_co','G_4_re')
logo=[0xff, 0xfc, 0x00, 0x3f, 0xc0, 0x0f, 0xff, 0xf0, 0x03, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x7f,
	0xff, 0xfc, 0x00, 0x1f, 0xe0, 0x0f, 0xfe, 0x08, 0x00, 0xff, 0xff, 0xff, 0x00, 0x03, 0xff, 0xff,
	0x00, 0x00, 0x00, 0x0f, 0xe0, 0x07, 0xfe, 0x02, 0x00, 0xff, 0xff, 0xfc, 0x01, 0xcf, 0xff, 0xff,
	0x00, 0x00, 0x00, 0x0f, 0xe0, 0x03, 0xfe, 0x70, 0x00, 0xff, 0xff, 0xf8, 0x01, 0xc0, 0x39, 0xff,
	0x00, 0x01, 0xc0, 0x1f, 0xe0, 0x00, 0x03, 0xf0, 0x00, 0xff, 0xff, 0xe0, 0x00, 0xe0, 0x01, 0xff,
	0x00, 0x83, 0x80, 0x1f, 0xe0, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xe0, 0x04, 0x04, 0x0f, 0xff,
	0x40, 0x70, 0x00, 0x1f, 0xe0, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xe0, 0x04, 0x04, 0x2f, 0xfe,
	0x00, 0x60, 0x00, 0x7f, 0xc0, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xc0, 0x0e, 0x00, 0x00, 0x7f,
	0x00, 0x04, 0x01, 0xff, 0x80, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xc0, 0x0f, 0x00, 0x1e, 0x7f,
	0x00, 0x00, 0x03, 0xff, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xc0, 0x1f, 0xfe, 0x0f, 0xff,
	0x00, 0x00, 0x3f, 0xfc, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xc0, 0x01, 0xfe, 0x03, 0xf0,
	0xf0, 0x00, 0xff, 0xf8, 0x00, 0x00, 0x10, 0x0e, 0x00, 0x01, 0xff, 0xfa, 0x00, 0x3e, 0x03, 0xf0,
	0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0xff, 0x00, 0x00, 0x01, 0xf0,
	0xff, 0xff, 0xff, 0x00, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x01, 0xf0,
	0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x06, 0x00, 0x40, 0x00, 0xf0,
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x83, 0x80, 0x00, 0x00, 0xc0, 0x10, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x87, 0x80, 0x00, 0x00, 0x0c, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x87, 0x80, 0x00, 0x00, 0x03, 0x81, 0xf0,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x87, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x9f, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x3f, 0xff, 0xc7, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x01, 0xff, 0xdf, 0x80, 0x00, 0x00, 0x00, 0x00,
	0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x17, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xfc, 0x03, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xe0, 0x1f, 0xff, 0x01, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00,
	0xfc, 0x00, 0x00, 0x00, 0x03, 0xff, 0xf0, 0xff, 0xff, 0x81, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x03,
	0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xe3, 0xff, 0xff, 0xc1, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xcf, 0xff, 0xff, 0xe0, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0x1f, 0xff, 0xff, 0xe0, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x3f, 0xff, 0xff, 0xe0, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0xe0, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0xfe, 0x00, 0x7f, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x03, 0xfc, 0x00, 0xff, 0xfc, 0x07, 0xc1, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x03, 0xfe, 0x01, 0xff, 0xf8, 0x07, 0xc1, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x03, 0xff, 0xe3, 0xff, 0xf8, 0x07, 0x81, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x07, 0xff, 0xe3, 0xff, 0xfc, 0x1f, 0x83, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x07, 0xff, 0xe3, 0xff, 0xff, 0xff, 0x07, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x03, 0xff, 0xe3, 0xff, 0xff, 0xff, 0x0f, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x03, 0xff, 0xe3, 0xff, 0xff, 0xfc, 0x1f, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0xff, 0xe3, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x7f, 0xc1, 0xff, 0xff, 0xf0, 0x7f, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x81, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x1f, 0xfe, 0x07, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x0f, 0xfc, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x00, 0x01, 0xff, 0xff, 0xf7, 0xff, 0xff, 0xff, 0x80, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0x80, 0x3f, 0xff, 0xff, 0xc0, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x0f, 0xff, 0xff, 0xe0, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0x00, 0x07, 0xff, 0xff, 0xf0, 0x00,
	0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x03, 0xff, 0xe0, 0x00, 0x07, 0xff, 0xff, 0xf8, 0x00,
	0x00, 0x00, 0x07, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xfc, 0x00,
	0x00, 0x00, 0x07, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xc7, 0xff, 0xff, 0xfe, 0x00,
	0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00,
	0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0,
	0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0,
	0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0,
	0x00, 0x00, 0x04, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8,
	0x00, 0x10, 0x00, 0x80, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc,
	0x00, 0x13, 0x24, 0x92, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe,
	0x00, 0x11, 0x7c, 0x91, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0x00, 0x11, 0x24, 0x92, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0x00, 0x00, 0x00, 0x10, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0x00, 0x03, 0xff, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff]
buzzer = Pin(27, Pin.OUT)
pwm = PWM(buzzer, freq=400, duty=0)

sw = Pin(18, Pin.IN, Pin.PULL_UP)
r = RotaryIRQ(pin_num_clk=21,
              pin_num_dt=19,
              min_val=0,
              max_val=25,
              reverse=True,
              range_mode=RotaryIRQ.RANGE_WRAP)

i2c = SoftI2C( Pin(15), Pin(2),freq=400000)
oled = SSD1306_I2C(128,64, i2c)

run = True
x = r.value()
score=0
ls1=[]
ls2=[]


def loop1():
    global x, ls2, run
    while True:
        if run:
            x = r.value()*4
            sleep(0.01)

def loop2():
    global score, posx, posy, width, height, x, run
    while True:
        if run:
            oled.fill(0)
            oled.text(str(score), 110, 8)
            oled.hline(x, 63, 32, 1)
            oled.fill_rect(posx, posy, width, height, 1)
            posy+=4
            if posy> 64:
                posy=0
                posx = randint(0,118)
            oled.show()
            sleep(0.1)


th.start_new_thread(loop1, ())
th.start_new_thread(loop2, ())

while True:
    if run:
        for i in range(10):
            ls1.append(posx+i)
        for i in range(32):
            ls2.append(x+i)
        if len(set(ls1) & set(ls2))>=1 and posy==64:
            pwm.duty(120)
            sleep(0.1)
            pwm.duty(0)
            score+=1
        elif len(set(ls1) & set(ls2))==0 and posy==64:
            run = False
            buffer = bytearray(logo)
            fb = framebuf.FrameBuffer(buffer,128,56,framebuf.MONO_HLSB)
            oled.fill(0)
            oled.blit(fb,0,0)
            oled.text(f"SCORE: {score}", 32, 57)
            oled.show()
            play(buzzer, gameover, 120, 0.25)
        ls1=[]
        ls2=[]

    else:
        if sw.value()==0:
            score = 0
            posy=0
            posx = randint(0,118)
            run = True
    sleep(0.1)